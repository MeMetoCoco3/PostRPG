// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: map.sql

package database

import (
	"context"
	"database/sql"
)

const checkPosition = `-- name: CheckPosition :one
SELECT terrain, character FROM map WHERE map.x = $1 AND map.y = $2
`

type CheckPositionParams struct {
	X int32
	Y int32
}

type CheckPositionRow struct {
	Terrain   NullTerrainType
	Character sql.NullString
}

func (q *Queries) CheckPosition(ctx context.Context, arg CheckPositionParams) (CheckPositionRow, error) {
	row := q.db.QueryRowContext(ctx, checkPosition, arg.X, arg.Y)
	var i CheckPositionRow
	err := row.Scan(&i.Terrain, &i.Character)
	return i, err
}

const getCharacterPosition = `-- name: GetCharacterPosition :one
SELECT x, y, terrain FROM map WHERE map.character = $1
`

type GetCharacterPositionRow struct {
	X       int32
	Y       int32
	Terrain NullTerrainType
}

func (q *Queries) GetCharacterPosition(ctx context.Context, character sql.NullString) (GetCharacterPositionRow, error) {
	row := q.db.QueryRowContext(ctx, getCharacterPosition, character)
	var i GetCharacterPositionRow
	err := row.Scan(&i.X, &i.Y, &i.Terrain)
	return i, err
}

const moveCharacter = `-- name: MoveCharacter :exec
UPDATE map SET character = $1 WHERE map.x = $2 AND map.y = $3
`

type MoveCharacterParams struct {
	Character sql.NullString
	X         int32
	Y         int32
}

func (q *Queries) MoveCharacter(ctx context.Context, arg MoveCharacterParams) error {
	_, err := q.db.ExecContext(ctx, moveCharacter, arg.Character, arg.X, arg.Y)
	return err
}

const setAllNull = `-- name: SetAllNull :exec
UPDATE map SET character = NULL
`

func (q *Queries) SetAllNull(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, setAllNull)
	return err
}

const setNull = `-- name: SetNull :exec
UPDATE map SET character = NULL WHERE map.x = $1 AND map.y = $2
`

type SetNullParams struct {
	X int32
	Y int32
}

func (q *Queries) SetNull(ctx context.Context, arg SetNullParams) error {
	_, err := q.db.ExecContext(ctx, setNull, arg.X, arg.Y)
	return err
}
